SQL> CREATE OR REPLACE PACKAGE EmployeeManagement AS
  2      PROCEDURE HireNewEmployee(
  3          p_employeeID IN NUMBER,
  4          p_name IN VARCHAR2,
  5          p_position IN VARCHAR2,
  6          p_salary IN NUMBER,
  7          p_department IN VARCHAR2,
  8          p_hireDate IN DATE
  9      );
 10  
 11      PROCEDURE UpdateEmployeeDetails(
 12          p_employeeID IN NUMBER,
 13          p_name IN VARCHAR2,
 14          p_position IN VARCHAR2,
 15          p_salary IN NUMBER,
 16          p_department IN VARCHAR2
 17      );
 18  
 19      FUNCTION CalculateAnnualSalary(
 20          p_employeeID IN NUMBER
 21      ) RETURN NUMBER;
 22  END EmployeeManagement;
 23  /

Package created.

SQL> CREATE OR REPLACE PACKAGE BODY EmployeeManagement AS
  2  
  3      PROCEDURE HireNewEmployee(
  4          p_employeeID IN NUMBER,
  5          p_name IN VARCHAR2,
  6          p_position IN VARCHAR2,
  7          p_salary IN NUMBER,
  8          p_department IN VARCHAR2,
  9          p_hireDate IN DATE
 10      ) IS
 11      BEGIN
 12          INSERT INTO Employees (EmployeeID, Name, Position, Salary, Department, HireDate)
 13          VALUES (p_employeeID, p_name, p_position, p_salary, p_department, p_hireDate);
 14          COMMIT;
 15      EXCEPTION
 16          WHEN DUP_VAL_ON_INDEX THEN
 17              DBMS_OUTPUT.PUT_LINE('Employee ID already exists.');
 18              ROLLBACK;
 19          WHEN OTHERS THEN
 20              DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
 21              ROLLBACK;
 22      END;
 23  
 24      PROCEDURE UpdateEmployeeDetails(
 25          p_employeeID IN NUMBER,
 26          p_name IN VARCHAR2,
 27          p_position IN VARCHAR2,
 28          p_salary IN NUMBER,
 29          p_department IN VARCHAR2
 30      ) IS
 31      BEGIN
 32          UPDATE Employees
 33          SET Name = p_name,
 34              Position = p_position,
 35              Salary = p_salary,
 36              Department = p_department
 37          WHERE EmployeeID = p_employeeID;
 38          COMMIT;
 39      EXCEPTION
 40          WHEN NO_DATA_FOUND THEN
 41              DBMS_OUTPUT.PUT_LINE('No employee found with the provided ID.');
 42          WHEN OTHERS THEN
 43              DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
 44              ROLLBACK;
 45      END;
 46  
 47      FUNCTION CalculateAnnualSalary(
 48          p_employeeID IN NUMBER
 49      ) RETURN NUMBER IS
 50          v_salary NUMBER;
 51      BEGIN
 52          SELECT Salary INTO v_salary
 53          FROM Employees
 54          WHERE EmployeeID = p_employeeID;
 55          RETURN v_salary * 12; -- Assuming salary is monthly
 56      EXCEPTION
 57          WHEN NO_DATA_FOUND THEN
 58              DBMS_OUTPUT.PUT_LINE('No employee found with the provided ID.');
 59              RETURN NULL;
 60          WHEN OTHERS THEN
 61              DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
 62              RETURN NULL;
 63      END;
 64  
 65  END EmployeeManagement;
 66  /

Package body created.

